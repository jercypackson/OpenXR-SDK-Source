#pragma once

#include "openxr/openxr.h"
#include <vector>

namespace Geometry {

struct Iris {
    XrVector4f Data;
    XrVector3f Color;
};

constexpr XrVector3f setosa{1, 0, 0};
constexpr XrVector3f versicolor{0, 1, 0};
constexpr XrVector3f virginica{0, 0, 1};

constexpr XrVector3f grey{0.5f, 0.5f, 0.5f};



std::vector<Iris> data = {
{-0.5556f,	0.2500f,	-0.8644f,	-0.9167f,	setosa},
{-0.6667f,	-0.1667f,	-0.8644f,	-0.9167f,	setosa},
{-0.7778f,	0.0000f,	-0.8983f,	-0.9167f,	setosa},
{-0.8333f,	-0.0833f,	-0.8305f,	-0.9167f,	setosa},
{-0.6111f,	0.3333f,	-0.8644f,	-0.9167f,	setosa},
{-0.3889f,	0.5833f,	-0.7627f,	-0.7500f,	setosa},
{-0.8333f,	0.1667f,	-0.8644f,	-0.8333f,	setosa},
{-0.6111f,	0.1667f,	-0.8305f,	-0.9167f,	setosa},
{-0.9444f,	-0.2500f,	-0.8644f,	-0.9167f,	setosa},
{-0.6667f,	-0.0833f,	-0.8305f,	-1.0000f,	setosa},
{-0.3889f,	0.4167f,	-0.8305f,	-0.9167f,	setosa},
{-0.7222f,	0.1667f,	-0.7966f,	-0.9167f,	setosa},
{-0.7222f,	-0.1667f,	-0.8644f,	-1.0000f,	setosa},
{-1.0000f,	-0.1667f,	-0.9661f,	-1.0000f,	setosa},
{-0.1667f,	0.6667f,	-0.9322f,	-0.9167f,	setosa},
{-0.2222f,	1.0000f,	-0.8305f,	-0.7500f,	setosa},
{-0.3889f,	0.5833f,	-0.8983f,	-0.7500f,	setosa},
{-0.5556f,	0.2500f,	-0.8644f,	-0.8333f,	setosa},
{-0.2222f,	0.5000f,	-0.7627f,	-0.8333f,	setosa},
{-0.5556f,	0.5000f,	-0.8305f,	-0.8333f,	setosa},
{-0.3889f,	0.1667f,	-0.7627f,	-0.9167f,	setosa},
{-0.5556f,	0.4167f,	-0.8305f,	-0.7500f,	setosa},
{-0.8333f,	0.3333f,	-1.0000f,	-0.9167f,	setosa},
{-0.5556f,	0.0833f,	-0.7627f,	-0.6667f,	setosa},
{-0.7222f,	0.1667f,	-0.6949f,	-0.9167f,	setosa},
{-0.6111f,	-0.1667f,	-0.7966f,	-0.9167f,	setosa},
{-0.6111f,	0.1667f,	-0.7966f,	-0.7500f,	setosa},
{-0.5000f,	0.2500f,	-0.8305f,	-0.9167f,	setosa},
{-0.5000f,	0.1667f,	-0.8644f,	-0.9167f,	setosa},
{-0.7778f,	0.0000f,	-0.7966f,	-0.9167f,	setosa},
{-0.7222f,	-0.0833f,	-0.7966f,	-0.9167f,	setosa},
{-0.3889f,	0.1667f,	-0.8305f,	-0.7500f,	setosa},
{-0.5000f,	0.7500f,	-0.8305f,	-1.0000f,	setosa},
{-0.3333f,	0.8333f,	-0.8644f,	-0.9167f,	setosa},
{-0.6667f,	-0.0833f,	-0.8305f,	-1.0000f,	setosa},
{-0.6111f,	0.0000f,	-0.9322f,	-0.9167f,	setosa},
{-0.3333f,	0.2500f,	-0.8983f,	-0.9167f,	setosa},
{-0.6667f,	-0.0833f,	-0.8305f,	-1.0000f,	setosa},
{-0.9444f,	-0.1667f,	-0.8983f,	-0.9167f,	setosa},
{-0.5556f,	0.1667f,	-0.8305f,	-0.9167f,	setosa},
{-0.6111f,	0.2500f,	-0.8983f,	-0.8333f,	setosa},
{-0.8889f,	-0.7500f,	-0.8983f,	-0.8333f,	setosa},
{-0.9444f,	0.0000f,	-0.8983f,	-0.9167f,	setosa},
{-0.6111f,	0.2500f,	-0.7966f,	-0.5833f,	setosa},
{-0.5556f,	0.5000f,	-0.6949f,	-0.7500f,	setosa},
{-0.7222f,	-0.1667f,	-0.8644f,	-0.8333f,	setosa},
{-0.5556f,	0.5000f,	-0.7966f,	-0.9167f,	setosa},
{-0.8333f,	0.0000f,	-0.8644f,	-0.9167f,	setosa},
{-0.4444f,	0.4167f,	-0.8305f,	-0.9167f,	setosa},
{-0.6111f,	0.0833f,	-0.8644f,	-0.9167f,	setosa},
{0.5000f,	0.0000f,	0.2542f,	0.0833f,	versicolor},
{0.1667f,	0.0000f,	0.1864f,	0.1667f,	versicolor},
{0.4444f,	-0.0833f,	0.3220f,	0.1667f,	versicolor},
{-0.3333f,	-0.7500f,	0.0169f,	0.0000f,	versicolor},
{0.2222f,	-0.3333f,	0.2203f,	0.1667f,	versicolor},
{-0.2222f,	-0.3333f,	0.1864f,	0.0000f,	versicolor},
{0.1111f,	0.0833f,	0.2542f,	0.2500f,	versicolor},
{-0.6667f,	-0.6667f,	-0.2203f,	-0.2500f,	versicolor},
{0.2778f,	-0.2500f,	0.2203f,	0.0000f,	versicolor},
{-0.5000f,	-0.4167f,	-0.0169f,	0.0833f,	versicolor},
{-0.6111f,	-1.0000f,	-0.1525f,	-0.2500f,	versicolor},
{-0.1111f,	-0.1667f,	0.0847f,	0.1667f,	versicolor},
{-0.0556f,	-0.8333f,	0.0169f,	-0.2500f,	versicolor},
{0.0000f,	-0.2500f,	0.2542f,	0.0833f,	versicolor},
{-0.2778f,	-0.2500f,	-0.1186f,	0.0000f,	versicolor},
{0.3333f,	-0.0833f,	0.1525f,	0.0833f,	versicolor},
{-0.2778f,	-0.1667f,	0.1864f,	0.1667f,	versicolor},
{-0.1667f,	-0.4167f,	0.0508f,	-0.2500f,	versicolor},
{0.0556f,	-0.8333f,	0.1864f,	0.1667f,	versicolor},
{-0.2778f,	-0.5833f,	-0.0169f,	-0.1667f,	versicolor},
{-0.1111f,	0.0000f,	0.2881f,	0.4167f,	versicolor},
{0.0000f,	-0.3333f,	0.0169f,	0.0000f,	versicolor},
{0.1111f,	-0.5833f,	0.3220f,	0.1667f,	versicolor},
{0.0000f,	-0.3333f,	0.2542f,	-0.0833f,	versicolor},
{0.1667f,	-0.2500f,	0.1186f,	0.0000f,	versicolor},
{0.2778f,	-0.1667f,	0.1525f,	0.0833f,	versicolor},
{0.3889f,	-0.3333f,	0.2881f,	0.0833f,	versicolor},
{0.3333f,	-0.1667f,	0.3559f,	0.3333f,	versicolor},
{-0.0556f,	-0.2500f,	0.1864f,	0.1667f,	versicolor},
{-0.2222f,	-0.5000f,	-0.1525f,	-0.2500f,	versicolor},
{-0.3333f,	-0.6667f,	-0.0508f,	-0.1667f,	versicolor},
{-0.3333f,	-0.6667f,	-0.0847f,	-0.2500f,	versicolor},
{-0.1667f,	-0.4167f,	-0.0169f,	-0.0833f,	versicolor},
{-0.0556f,	-0.4167f,	0.3898f,	0.2500f,	versicolor},
{-0.3889f,	-0.1667f,	0.1864f,	0.1667f,	versicolor},
{-0.0556f,	0.1667f,	0.1864f,	0.2500f,	versicolor},
{0.3333f,	-0.0833f,	0.2542f,	0.1667f,	versicolor},
{0.1111f,	-0.7500f,	0.1525f,	0.0000f,	versicolor},
{-0.2778f,	-0.1667f,	0.0508f,	0.0000f,	versicolor},
{-0.3333f,	-0.5833f,	0.0169f,	0.0000f,	versicolor},
{-0.3333f,	-0.5000f,	0.1525f,	-0.0833f,	versicolor},
{0.0000f,	-0.1667f,	0.2203f,	0.0833f,	versicolor},
{-0.1667f,	-0.5000f,	0.0169f,	-0.0833f,	versicolor},
{-0.6111f,	-0.7500f,	-0.2203f,	-0.2500f,	versicolor},
{-0.2778f,	-0.4167f,	0.0847f,	0.0000f,	versicolor},
{-0.2222f,	-0.1667f,	0.0847f,	-0.0833f,	versicolor},
{-0.2222f,	-0.2500f,	0.0847f,	0.0000f,	versicolor},
{0.0556f,	-0.2500f,	0.1186f,	0.0000f,	versicolor},
{-0.5556f,	-0.5833f,	-0.3220f,	-0.1667f,	versicolor},
{-0.2222f,	-0.3333f,	0.0508f,	0.0000f,	versicolor},
{0.1111f,	0.0833f,	0.6949f,	1.0000f,	virginica},
{-0.1667f,	-0.4167f,	0.3898f,	0.5000f,	virginica},
{0.5556f,	-0.1667f,	0.6610f,	0.6667f,	virginica},
{0.1111f,	-0.2500f,	0.5593f,	0.4167f,	virginica},
{0.2222f,	-0.1667f,	0.6271f,	0.7500f,	virginica},
{0.8333f,	-0.1667f,	0.8983f,	0.6667f,	virginica},
{-0.6667f,	-0.5833f,	0.1864f,	0.3333f,	virginica},
{0.6667f,	-0.2500f,	0.7966f,	0.4167f,	virginica},
{0.3333f,	-0.5833f,	0.6271f,	0.4167f,	virginica},
{0.6111f,	0.3333f,	0.7288f,	1.0000f,	virginica},
{0.2222f,	0.0000f,	0.3898f,	0.5833f,	virginica},
{0.1667f,	-0.4167f,	0.4576f,	0.5000f,	virginica},
{0.3889f,	-0.1667f,	0.5254f,	0.6667f,	virginica},
{-0.2222f,	-0.5833f,	0.3559f,	0.5833f,	virginica},
{-0.1667f,	-0.3333f,	0.3898f,	0.9167f,	virginica},
{0.1667f,	0.0000f,	0.4576f,	0.8333f,	virginica},
{0.2222f,	-0.1667f,	0.5254f,	0.4167f,	virginica},
{0.8889f,	0.5000f,	0.9322f,	0.7500f,	virginica},
{0.8889f,	-0.5000f,	1.0000f,	0.8333f,	virginica},
{-0.0556f,	-0.8333f,	0.3559f,	0.1667f,	virginica},
{0.4444f,	0.0000f,	0.5932f,	0.8333f,	virginica},
{-0.2778f,	-0.3333f,	0.3220f,	0.5833f,	virginica},
{0.8889f,	-0.3333f,	0.9322f,	0.5833f,	virginica},
{0.1111f,	-0.4167f,	0.3220f,	0.4167f,	virginica},
{0.3333f,	0.0833f,	0.5932f,	0.6667f,	virginica},
{0.6111f,	0.0000f,	0.6949f,	0.4167f,	virginica},
{0.0556f,	-0.3333f,	0.2881f,	0.4167f,	virginica},
{0.0000f,	-0.1667f,	0.3220f,	0.4167f,	virginica},
{0.1667f,	-0.3333f,	0.5593f,	0.6667f,	virginica},
{0.6111f,	-0.1667f,	0.6271f,	0.2500f,	virginica},
{0.7222f,	-0.3333f,	0.7288f,	0.5000f,	virginica},
{1.0000f,	0.5000f,	0.8305f,	0.5833f,	virginica},
{0.1667f,	-0.3333f,	0.5593f,	0.7500f,	virginica},
{0.1111f,	-0.3333f,	0.3898f,	0.1667f,	virginica},
{0.0000f,	-0.5000f,	0.5593f,	0.0833f,	virginica},
{0.8889f,	-0.1667f,	0.7288f,	0.8333f,	virginica},
{0.1111f,	0.1667f,	0.5593f,	0.9167f,	virginica},
{0.1667f,	-0.0833f,	0.5254f,	0.4167f,	virginica},
{-0.0556f,	-0.1667f,	0.2881f,	0.4167f,	virginica},
{0.4444f,	-0.0833f,	0.4915f,	0.6667f,	virginica},
{0.3333f,	-0.0833f,	0.5593f,	0.9167f,	virginica},
{0.4444f,	-0.0833f,	0.3898f,	0.8333f,	virginica},
{-0.1667f,	-0.4167f,	0.3898f,	0.5000f,	virginica},
{0.3889f,	0.0000f,	0.6610f,	0.8333f,	virginica},
{0.3333f,	0.0833f,	0.5932f,	1.0000f,	virginica},
{0.3333f,	-0.1667f,	0.4237f,	0.8333f,	virginica},
{0.1111f,	-0.5833f,	0.3559f,	0.5000f,	virginica},
{0.2222f,	-0.1667f,	0.4237f,	0.5833f,	virginica},
{0.0556f,	0.1667f,	0.4915f,	0.8333f,	virginica},
{-0.1111f,	-0.1667f,	0.3898f,	0.4167f,	virginica},


};



float a[] = {-1,-1,-1,-1};
float b[] = { 1, 1, 1, 1};

#define PNT(p1,p2,p3,p4) {{p1[0], p2[1], p3[2], p4[3]}, grey}

std::vector<Iris> tess = {
    PNT(a,a,a,b),	PNT(a,a,a,a),
    PNT(a,a,b,a),	PNT(a,a,a,a),
    PNT(a,b,a,a),	PNT(a,a,a,a),
    PNT(b,a,a,a),	PNT(a,a,a,a),
    PNT(a,a,b,b),	PNT(a,a,a,b),
    PNT(a,b,a,b),	PNT(a,a,a,b),
    PNT(b,a,a,b),	PNT(a,a,a,b),
    PNT(a,a,b,b),	PNT(a,a,b,a),
    PNT(a,b,b,a),	PNT(a,a,b,a),
    PNT(b,a,b,a),	PNT(a,a,b,a),
    PNT(a,b,b,b),	PNT(a,a,b,b),
    PNT(b,a,b,b),	PNT(a,a,b,b),
    PNT(a,b,a,b),	PNT(a,b,a,a),
    PNT(a,b,b,a),	PNT(a,b,a,a),
    PNT(b,b,a,a),	PNT(a,b,a,a),
    PNT(a,b,b,b),	PNT(a,b,a,b),
    PNT(b,b,a,b),	PNT(a,b,a,b),
    PNT(a,b,b,b),	PNT(a,b,b,a),
    PNT(b,b,b,a),	PNT(a,b,b,a),
    PNT(b,b,b,b),	PNT(a,b,b,b),
    PNT(b,a,a,b),	PNT(b,a,a,a),
    PNT(b,a,b,a),	PNT(b,a,a,a),
    PNT(b,b,a,a),	PNT(b,a,a,a),
    PNT(b,a,b,b),	PNT(b,a,a,b),
    PNT(b,b,a,b),	PNT(b,a,a,b),
    PNT(b,a,b,b),	PNT(b,a,b,a),
    PNT(b,b,b,a),	PNT(b,a,b,a),
    PNT(b,b,b,b),	PNT(b,a,b,b),
    PNT(b,b,a,b),	PNT(b,b,a,a),
    PNT(b,b,b,a),	PNT(b,b,a,a),
    PNT(b,b,b,b),	PNT(b,b,a,b),
    PNT(b,b,b,b),	PNT(b,b,b,a),
};


}  // namespace Geometry
